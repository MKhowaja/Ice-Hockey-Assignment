

System.out.print("Select whether player is forward, defense or goalie: ");
playerType = in.next();
if (playerType.equalsIgnoreCase("forward")||playerType.equalsIgnoreCase("defense")){
  do{
		System.out.print("Enter the number of game-winning goals: ");
		gwGoals=in.nextInt();
	}while (gwGoals<0); //Ensure the player doesn't have negative game-winning goals
	
	do{
		System.out.print("Enter the number of power-play goals: ");
		ppGoals=in.nextInt();
	}while (ppGoals<0); //Ensure the player doesn't have negative power-play goals
	
	do{
		System.out.print("Enter the number of shootout goals: ");
		soGoals=in.nextInt();
	}while (soGoals<0); //Ensure the player doesn't have negative shootout goals
	
}else if (playerType.equalsIgnoreCase("goalie")){
	do{
		System.out.print("Enter the number of wins: ");
		wins=in.nextInt();
	}while (wins<0); //Ensures the number of wins is above zero (valid)
	
	do{
		System.out.print("Enter the number of loses: ");
		loses=in.nextInt();
	}while(loses<0); //Ensures the number of loses is above zero (valid)
	
	do{
		System.out.print("Enter the number of wins during playoffs: ");
		winsP=in.nextInt();
	}while(winsP<0); //Ensures the number of wins during playoffs is above zero (valid)
	
	do{
		System.out.print("Enter the number of loses during playoffs: ");
		losesP=in.nextInt();
	}while(losesP<0); //Ensures the number of loses during playoffs is above zero (valid)
	
	do{
		System.out.print("Enter the number of loses during overtime: ");
		losesOT=in.nextInt();
	}while(losesOT<0); //Ensures the number of loses during overtime is above zero (valid)
	
	do{
		System.out.print("Enter the number of games started: ");
		gameStart=in.nextInt();
	}while(gameStart<0); //Ensures the number of games started is above zero (valid)
	
	do{
		System.out.print("Enter the number of goals scored against: ");
		goalA=in.nextInt();
	}while(goalA<0); //Ensures the number of goals scored against is above zero (valid)
	
	do{
		System.out.print("Enter the total number of shots on goal: ");
		shotsOG=in.nextInt();
	}while(shotsOG<0); //Ensures the total number of shots on goal is above zero (valid)
	
	do{
		System.out.print("Enter the number of saves goalie made: ");
		saves=in.nextInt();
	}while(saves<0); //Ensures the number of saves goalie made is above zero (valid)
	
	do{
		System.out.print("Enter the number of games where goalie had no goals against him and only goalie to play in game: ");
		shutouts=in.nextInt();
	}while(shutouts<0); //Ensures the number of shutouts is above zero (valid)
	
	do{
		System.out.print("Enter the number of goals scored against while off ice for extra attack player: ");
		emptyNG=in.nextInt();
	}while(emptyNG<0); //Ensures the the number of empty net goals is above zero (valid)
}

if (classType.equals("forward")||classType.equals("defense")||classType.equals("goalie")) 
	public static void loadCoach() {
		if (classType.equals("assistant"))
			person[i] = new assistant(null, null, false, 0, 0, 0, 0, 0, 0, 0);
		else if (classType.equals("goaltender"))
			person[i] = new goaltender(null, null, false, 0, 0, 0, 0, 0, 0, 0);
		else if (classType.equals("head"))
			person[i] = new head(null, null, false, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
		else if (classType.equals("trainer"))
			person[i] = new trainer(null, null, false, 0, 0, 0, 0, 0, 0, 0);
		
		
		if (classType.equals("head")) {
			//loads coach fields into the object

			x = br.readLine();
			((head)players.get(i)).winS = Integer.parseInt(x.substring(x.indexOf(": ")+2,x.length()));

			x = br.readLine();
			((head)person[i]).loseS = Integer.parseInt(x.substring(x.indexOf(": ")+2,x.length()));

			x = br.readLine();
			((head)person[i]).gameCS = Integer.parseInt(x.substring(x.indexOf(": ")+2,x.length()));

			x = br.readLine();
			((head)person[i]).pointPS = Double.parseDouble(x.substring(x.indexOf(": ")+2,x.length()));

			x = br.readLine();
			((head)person[i]).winP = Integer.parseInt(x.substring(x.indexOf(": ")+2,x.length()));

			x = br.readLine();
			((head)person[i]).loseP = Integer.parseInt(x.substring(x.indexOf(": ")+2,x.length()));

			x = br.readLine();
			((head)person[i]).gameCP = Integer.parseInt(x.substring(x.indexOf(": ")+2,x.length()));

			x = br.readLine();
			((head)person[i]).stanleyN = Integer.parseInt(x.substring(x.indexOf(": ")+2,x.length()));
		}
